import streamlit as st
from datetime import datetime, timedelta

st.set_page_config(page_title="√ÅFA El√©v√ºl√©s Kalkul√°tor", layout="centered")

st.image("nav_logo.png", width=150)
st.title("üìÜ √ÅFA Ellen≈ërz√©si El√©v√ºl√©s Kalkul√°tor")
st.markdown("Seg√≠t meghat√°rozni, hogy egy adott id≈ëszak **el√©v√ºlt-e**, figyelembe v√©ve az ellen≈ërz√©s joghat√°sait.")

closure_date = st.date_input("üóìÔ∏è Vizsg√°lat v√°rhat√≥ lez√°r√°s√°nak d√°tuma")
frequency = st.selectbox("üìä √ÅFA bevall√°s gyakoris√°ga", ["havi", "negyed√©ves", "√©ves"])

new_procedure = st.checkbox("üîÅ Volt √∫j elj√°r√°s (m√°sodfok, b√≠r√≥s√°gi stb.)?")
late_filing = st.checkbox("üêå T√∂rt√©nt k√©sedelmes bevall√°s?")
self_revision = st.checkbox("‚úèÔ∏è Volt √∂nellen≈ërz√©s?")
self_revision_favor = False
if self_revision:
    self_revision_favor = st.checkbox("üìâ Az √∂nellen≈ërz√©s az ad√≥z√≥ **jav√°ra** sz√≥lt?")
litigation = st.checkbox("‚öñÔ∏è Volt peres vagy m√°s nyugv√°st okoz√≥ elj√°r√°s?")

def get_latest_non_expired_period(closure_date, frequency, new_procedure, late_filing, self_revision, self_revision_favor, litigation):
    base_year = closure_date.year
    expiry_date = datetime(base_year - 4, 12, 31)

    if new_procedure:
        expiry_date += timedelta(days=365)
    if late_filing:
        expiry_date += timedelta(days=183)
    if self_revision and self_revision_favor:
        expiry_date = closure_date + timedelta(days=5*365)
    if litigation:
        expiry_date += timedelta(days=730)

    if closure_date > expiry_date:
        last_expired_year = expiry_date.year
    else:
        last_expired_year = expiry_date.year - 1

    if frequency == "havi":
        last_month = 12
        last_year = last_expired_year
    elif frequency == "negyed√©ves":
        last_month = 10
        last_year = last_expired_year
    elif frequency == "√©ves":
        last_month = 12
        last_year = last_expired_year - 1
    else:
        raise ValueError("Ismeretlen gyakoris√°g!")

    return last_year, last_month

if st.button("üìê Sz√°m√≠t√°s ind√≠t√°sa"):
    year, month = get_latest_non_expired_period(
        closure_date, frequency, new_procedure, late_filing, self_revision, self_revision_favor, litigation
    )
    st.success(f"‚úÖ Utols√≥ teljesen **el√©v√ºlt id≈ëszak**: {year}. {month:02d}")
    next_month = (month % 12) + 1
    next_year = year + 1 if next_month == 1 else year
    st.info(f"üìå Vizsg√°lhat√≥ id≈ëszak: {next_year}. {next_month:02d} h√≥napt√≥l kezd≈ëd≈ëen.")
